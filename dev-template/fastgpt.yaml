apiVersion: apps/v1
kind: Template
metadata: 
  name: fastgpt
spec:
  title: 'FastGpt'
  url: 'https://fastgpt.run/'
  github: 'https://github.com/labring/FastGPT'
  author: 'sealos'
  description: 'Fast GPT allows you to use your own openai API KEY to quickly call the openai interface, currently integrating Gpt35, Gpt4 and embedding. You can build your own knowledge base.'
  readme: 'https://github.com/labring/FastGPT/blob/main/README.md'
  icon: 'https://avatars.githubusercontent.com/u/50446880?s=48&v=4'
  template_type: inline
  defaults:
    suffix_name:
      type: string
      value: ${{ random(8) }}
    fastgpt_host:
      type: string
      value: ${{ random(8) }}
    fastgpt_admin_host:
      type: string
      value: ${{ random(8) }}
    fastgpt_keys_host:
      type: string
      value: ${{ random(8) }}
    root_password:
      type: string
      value: ${{ random(8) }}
  inputs:
    mail:
      description: 'QQ email address'
      type: string
      default: ''
      required: true
    mail_code:
      description: 'QQ mail_code'
      type: string
      default: ''
      required: true

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: fastgpt-keys-${{ defaults.suffix_name }}
  annotations:
    originImageName: ghcr.io/songquanpeng/one-api:latest
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: fastgpt-keys-${{ defaults.suffix_name }}
    app: fastgpt-keys-${{ defaults.suffix_name }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  minReadySeconds: 10
  serviceName: fastgpt-keys-${{ defaults.suffix_name }}
  selector:
    matchLabels:
      app: fastgpt-keys-${{ defaults.suffix_name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  template:
    metadata:
      labels:
        app: fastgpt-keys-${{ defaults.suffix_name }}
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: fastgpt-keys-${{ defaults.suffix_name }}
          image: ghcr.io/songquanpeng/one-api:latest
          env:
            - name: TZ
              value: Asia/Shanghai
            - name: SESSION_SECRET
              value: sessionsecret
            - name: REQUEST_INTERVAL
              value: '3600'
          resources:
            requests:
              cpu: 50m
              memory: 51Mi
            limits:
              cpu: 500m
              memory: 512Mi
          command: []
          args: []
          ports:
            - containerPort: 3000
          imagePullPolicy: Always
          volumeMounts:
            - name: vn-data
              mountPath: /data
      volumes: []
  volumeClaimTemplates:
    - metadata:
        annotations:
          path: /data
          value: '1'
        name: vn-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: fastgpt-keys-${{ defaults.suffix_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: fastgpt-keys-${{ defaults.suffix_name }}
spec:
  ports:
    - port: 3000
  selector:
    app: fastgpt-keys-${{ defaults.suffix_name }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fastgpt-keys-${{ defaults.suffix_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: fastgpt-keys-${{ defaults.suffix_name }}
    cloud.sealos.io/app-deploy-manager-domain: ${{ fastgpt_keys_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ${{ fastgpt_keys_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: fastgpt-keys-${{ defaults.suffix_name }}
                port:
                  number: 3000
  tls:
    - hosts:
        - ${{ fastgpt_keys_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      secretName: ${{ SEALOS_Cert_Secret_Name }}


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastgpt-${{ defaults.suffix_name }}
  annotations:
    originImageName: c121914yu/fast-gpt:latest
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    dev.sealos.run/deploy-on-sealos: fastgpt-${{ defaults.app_name }}
    dev.sealos.run/app-deploy-manager: fastgpt-${{ defaults.suffix_name }}
    app: fastgpt-${{ defaults.suffix_name }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: fastgpt-${{ defaults.suffix_name }}
  template:
    metadata:
      labels:
        app: fastgpt-${{ defaults.suffix_name }}
    spec:
      containers:
        - name: fastgpt-${{ defaults.suffix_name }}
          image: c121914yu/fast-gpt:latest
          env:
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: fastgpt-mongo-${{ defaults.suffix_name }}-conn-credential
                  key: password
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: fastgpt-pg-fastgpt-pg-${{ defaults.suffix_name }}-conn-credential
                  key: password    
            - name: ONEAPI_URL
              value: fastgpt-keys-${{ defaults.suffix_name }}.${{ SEALOS_NAMESPACE }}.svc.cluster.local:3000/v1
            - name: ONEAPI_KEY
              value: sk-xxxxxx
            - name: DB_MAX_LINK
              value: 5
            - name: MY_MAIL
              value: ${{ inputs.mail }}
            - name: MAILE_CODE
              value: ${{ inputs.mail_code }}
            - name: TOKEN_KEY
              value: fastgpttokenkey
            - name: ROOT_KEY
              value: rootkey
            - name: MONGODB_URI
              value: >-
                mongodb://root:$(MONGO_PASSWORD)@fastgpt-mongo-${{ defaults.suffix_name }}.${{ SEALOS_NAMESPACE }}.svc:27017
            - name: MONGODB_NAME
              value: fastgpt
            - name: PG_HOST
              value: fastgpt-pg-${{ defaults.suffix_name }}.${{ SEALOS_NAMESPACE }}.svc
            - name: PG_USER
              value: postgres
            - name: PG_PORT
              value: '5432'
            - name: PG_DB_NAME
              value: postgres
          resources:
            requests:
              cpu: 100m
              memory: 102Mi
            limits:
              cpu: 1000m
              memory: 1024Mi
          command: []
          args: []
          ports:
            - containerPort: 3000
          imagePullPolicy: Always
          volumeMounts: []
      volumes: []

---
apiVersion: v1
kind: Service
metadata:
  name: fastgpt-${{ defaults.suffix_name }}
  labels:
    dev.sealos.run/deploy-on-sealos: fastgpt-${{ defaults.app_name }}
    dev.sealos.run/app-deploy-manager: fastgpt-${{ defaults.suffix_name }}
spec:
  ports:
    - port: 3000
  selector:
    app: fastgpt-${{ defaults.suffix_name }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fastgpt-${{ defaults.suffix_name }}
  labels:
    dev.sealos.run/deploy-on-sealos: fastgpt-${{ defaults.app_name }}
    dev.sealos.run/app-deploy-manager: fastgpt-${{ defaults.suffix_name }}
    dev.sealos.run/app-deploy-manager-domain: ${{ defaults.fastgpt_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ${{ defaults.fastgpt_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: fastgpt-${{ defaults.suffix_name }}
                port:
                  number: 3000
  tls:
    - hosts:
        - ${{ defaults.fastgpt_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      secretName: ${{ SEALOS_Cert_Secret_Name }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastgpt-admin-${{ defaults.suffix_name }}
  annotations:
    originImageName: c121914yu/fastgpt-admin:latest
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: fastgpt-admin-${{ defaults.suffix_name }}
    app: fastgpt-admin-${{ defaults.suffix_name }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: fastgpt-admin-${{ defaults.suffix_name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  template:
    metadata:
      labels:
        app: fastgpt-admin-${{ defaults.suffix_name }}
    spec:
      containers:
        - name: fastgpt-admin-${{ defaults.suffix_name }}
          image: c121914yu/fastgpt-admin:latest
          env:
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: fastgpt-mongo-${{ defaults.suffix_name }}-conn-credential
                  key: password
            - name: MONGODB_URI
              value: >-
                mongodb://root:$(MONGO_PASSWORD)@fastgpt-mongo-${{ defaults.suffix_name }}.${{ SEALOS_NAMESPACE }}.svc:27017
            - name: MONGODB_NAME
              value: fastgpt
            - name: ADMIN_USER
              value: adminuser
            - name: ADMIN_PASS
              value: adminpsw
            - name: ADMIN_SECRET
              value: adminsecret
            - name: PARENT_URL
              value: ${{ defaults.fastgpt_host }}.${{ SEALOS_CLOUD_DOMAIN }}
            - name: PARENT_ROOT_KEY
              value: rootkey
          resources:
            requests:
              cpu: 20m
              memory: 12Mi
            limits:
              cpu: 200m
              memory: 128Mi
          command: []
          args: []
          ports:
            - containerPort: 3001
          imagePullPolicy: Always
          volumeMounts: []
      volumes: []

---
apiVersion: v1
kind: Service
metadata:
  name: fastgpt-admin-${{ defaults.suffix_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: fastgpt-admin-${{ defaults.suffix_name }}
spec:
  ports:
    - port: 3001
  selector:
    app: fastgpt-admin-${{ defaults.suffix_name }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fastgpt-admin-${{ defaults.suffix_name }}
  labels:
    cloud.sealos.io/app-deploy-manager: fastgpt-admin-${{ defaults.suffix_name }}
    cloud.sealos.io/app-deploy-manager-domain: ${{ defaults.fastgpt_admin_host }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ${{ defaults.fastgpt_admin_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: fastgpt-admin-${{ defaults.suffix_name }}
                port:
                  number: 3001
  tls:
    - hosts:
        - ${{ defaults.fastgpt_admin_host }}.${{ SEALOS_CLOUD_DOMAIN }}
      secretName: ${{ SEALOS_Cert_Secret_Name }}

---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  finalizers:
    - cluster.kubeblocks.io/finalizer
  labels:
    clusterdefinition.kubeblocks.io/name: mongodb
    clusterversion.kubeblocks.io/name: mongodb-5.0.14
    sealos-db-provider-cr: fastgpt-mongo-${{ defaults.suffix_name }}
  annotations: {}
  name: fastgpt-mongo-${{ defaults.suffix_name }}
  generation: 1
spec:
  affinity:
    nodeLabels: {}
    podAntiAffinity: Preferred
    tenancy: SharedNode
    topologyKeys: []
  clusterDefinitionRef: mongodb
  clusterVersionRef: mongodb-5.0.14
  componentSpecs:
    - componentDefRef: mongodb
      monitor: true
      name: mongodb
      replicas: 1
      resources:
        limits:
          cpu: 1000m
          memory: 1024Mi
        requests:
          cpu: 100m
          memory: 102Mi
      serviceAccountName: fastgpt-mongo-${{ defaults.suffix_name }}
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 3Gi
            storageClassName: openebs-backup  
  terminationPolicy: Delete
  tolerations: []


---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    sealos-db-provider-cr: fastgpt-mongo-${{ defaults.suffix_name }}
    app.kubernetes.io/instance: fastgpt-mongo-${{ defaults.suffix_name }}
    app.kubernetes.io/managed-by: kbcli
  name: fastgpt-mongo-${{ defaults.suffix_name }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    sealos-db-provider-cr: fastgpt-mongo-${{ defaults.suffix_name }}
    app.kubernetes.io/instance: fastgpt-mongo-${{ defaults.suffix_name }}
    app.kubernetes.io/managed-by: kbcli
  name: fastgpt-mongo-${{ defaults.suffix_name }}
rules:
  - apiGroups:
      - ''
    resources:
      - events
    verbs:
      - create

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    sealos-db-provider-cr: fastgpt-mongo-${{ defaults.suffix_name }}
    app.kubernetes.io/instance: fastgpt-mongo-${{ defaults.suffix_name }}
    app.kubernetes.io/managed-by: kbcli
  name: fastgpt-mongo-${{ defaults.suffix_name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: fastgpt-mongo-${{ defaults.suffix_name }}
subjects:
  - kind: ServiceAccount
    name: fastgpt-mongo-${{ defaults.suffix_name }}
    namespace: ${{ SEALOS_NAMESPACE}}


---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  finalizers:
    - cluster.kubeblocks.io/finalizer
  labels:
    clusterdefinition.kubeblocks.io/name: postgresql
    clusterversion.kubeblocks.io/name: postgresql-14.8.0
    sealos-db-provider-cr: fastgpt-pg-${{ defaults.suffix_name }}
  annotations: {}
  name: fastgpt-pg-${{ defaults.suffix_name }}
spec:
  affinity:
    nodeLabels: {}
    podAntiAffinity: Preferred
    tenancy: SharedNode
    topologyKeys: []
  clusterDefinitionRef: postgresql
  clusterVersionRef: postgresql-14.8.0
  componentSpecs:
    - componentDefRef: postgresql
      monitor: true
      name: postgresql
      replicas: 1
      resources:
        limits:
          cpu: 1000m
          memory: 1024Mi
        requests:
          cpu: 100m
          memory: 102Mi
      serviceAccountName: fastgpt-pg-${{ defaults.suffix_name }}
      switchPolicy:
        type: Noop
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 5Gi
            storageClassName: openebs-backup
  terminationPolicy: Delete
  tolerations: []

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    sealos-db-provider-cr: fastgpt-pg-${{ defaults.suffix_name }}
    app.kubernetes.io/instance: fastgpt-pg-${{ defaults.suffix_name }}
    app.kubernetes.io/managed-by: kbcli
  name: fastgpt-pg-${{ defaults.suffix_name }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    sealos-db-provider-cr: fastgpt-pg-${{ defaults.suffix_name }}
    app.kubernetes.io/instance: fastgpt-pg-${{ defaults.suffix_name }}
    app.kubernetes.io/managed-by: kbcli
  name: fastgpt-pg-${{ defaults.suffix_name }}
rules:
  - apiGroups:
      - ''
    resources:
      - events
    verbs:
      - create
  - apiGroups:
      - ''
    resources:
      - configmaps
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
      - delete
  - apiGroups:
      - ''
    resources:
      - endpoints
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
      - delete
  - apiGroups:
      - ''
    resources:
      - pods
    verbs:
      - get
      - list
      - patch
      - update
      - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    sealos-db-provider-cr: fastgpt-pg-${{ defaults.suffix_name }}
    app.kubernetes.io/instance: fastgpt-pg-${{ defaults.suffix_name }}
    app.kubernetes.io/managed-by: kbcli
  name: fastgpt-pg-${{ defaults.suffix_name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: fastgpt-pg-${{ defaults.suffix_name }}
subjects:
  - kind: ServiceAccount
    name: fastgpt-pg-${{ defaults.suffix_name }}
    namespace: ${{ SEALOS_NAMESPACE }}

