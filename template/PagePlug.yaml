apiVersion: template.app.sealos.io/v1beta1
kind: Template
metadata:
  name: PagePlug-${{ defaults.name_suffix }}
spec:
  title: 'PagePlug'
  url: 'https://lowcode.methodot.com/'
  readme: 'https://raw.githubusercontent.com/cloudtogo/pageplug/open-v1.8/README.md'
  icon: 'https://avatars.githubusercontent.com/u/23050952?s=48&v=4'
  template_type: inline
  defaults:
    ingress_name:
      # number or string.
      type: string
      value: ${{ random(8) }}
    name_suffix:
      type: string
      value: ${{ random(8) }}
  inputs:
    volume_size:
      description: 'save data size (Gi)'
      # boolean, choice, number, or string.
      type: string
      default: '1'
      required: false

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: PagePlug
  annotations:
    originImageName: cloudtogouser/pageplug-ce
    deploy.cloud.sealos.io/minReplicas: '1'
    deploy.cloud.sealos.io/maxReplicas: '1'
  labels:
    cloud.sealos.io/app-deploy-manager: PagePlug
    app: PagePlug
spec:
  replicas: 1
  revisionHistoryLimit: 1
  minReadySeconds: 10
  serviceName: PagePlug
  selector:
    matchLabels:
      app: PagePlug
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  template:
    metadata:
      labels:
        app: PagePlug
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: PagePlug
          image: cloudtogouser/pageplug-ce
          env: []
          resources:
            requests:
              cpu: 10m
              memory: 6Mi
            limits:
              cpu: 100m
              memory: 64Mi
          command: []
          args: []
          ports:
            - containerPort: 80
          imagePullPolicy: Always
          volumeMounts:
            - name: vn-appvn-data
              mountPath: /app/data
      volumes: []
  volumeClaimTemplates:
    - metadata:
        annotations:
          path: /app/data
          value: '1'
        name: vn-appvn-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: ${{ inputs.volume_size }}Gi

---
apiVersion: v1
kind: Service
metadata:
  name: PagePlug
  labels:
    cloud.sealos.io/app-deploy-manager: PagePlug
spec:
  ports:
    - port: 80
  selector:
    app: PagePlug

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: PagePlug
  labels:
    cloud.sealos.io/app-deploy-manager: PagePlug
    cloud.sealos.io/app-deploy-manager-domain:  ${{ defaults.ingress_name }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/server-snippet: |
      client_header_buffer_size 64k;
      large_client_header_buffers 4 128k;
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 64k
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png)) {
        expires 30d;
        add_header Cache-Control "public";
      }
spec:
  rules:
    - host: ${{ defaults.ingress_name }}.cloud.sealos.io
      http:
        paths:
          - pathType: Prefix
            path: /()(.*)
            backend:
              service:
                name: PagePlug
                port:
                  number: 80
  tls:
    - hosts:
        - ${{ defaults.ingress_name }}.cloud.sealos.io
      secretName: wildcard-cloud-sealos-io-cert
